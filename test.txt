const fs = require("fs");
module.exports.config = {
    name: "test",
    version: "1.0.1",
    hasPermssion: 0,
    credits: "⚡D-Jukie", 
    description: "💴𝐁𝐨̂́𝐜 𝐓𝐡𝐚̆𝐦 𝐯𝐨̛́𝐢 𝐜𝐚́c 𝐠𝐨́𝐢 𝟏𝟎𝐤 𝟐𝟎𝐤 𝟓𝟎𝐤 𝟏𝟎𝟎𝐤 𝟐𝟎𝟎𝐤 𝟓𝟎𝟎𝐤💎",
    commandCategory: "𝑲𝒊𝒆̂́𝒎 𝑻𝒊𝒆̂̀𝒏",
    cooldowns: 5,
    envConfig: {
        cooldownTime: 0 
    },
    denpendencies: {
        "fs": "",
        "request": ""
}
};
module.exports.onLoad = () => {
    const fs = require("fs-extra");
    const request = require("request");
    const dirMaterial = __dirname + ``;
    if (!fs.existsSync(dirMaterial + "")) fs.mkdirSync(dirMaterial, { recursive: true });
    if (!fs.existsSync(dirMaterial + "")) request("").pipe(fs.createWriteStream(dirMaterial + ""));
}
module.exports.handleReply = async ({ 
    event:e, 
    api, 
    handleReply, 
    Currencies }) => {
    const { threadID, messageID, senderID } = e;
    let data = (await Currencies.getData(senderID)).data || {};
if (handleReply.author != e.senderID) 
return api.sendMessage("🎋𝐋𝐮̛𝐨̛̣𝐭 𝐛𝐨̂́𝐜 𝐭𝐡𝐚̆𝐦 𝐜𝐮̉𝐚 𝐚𝐢 𝐧𝐠𝐮̛𝐨̛̀𝐢 đ𝐨́ 𝐛𝐨̂́𝐜 𝐧𝐡𝐚́, 𝐛𝐚̣𝐧 𝐤𝐨 𝐧𝐞̂𝐧 𝐭𝐫𝐚𝐧𝐡 𝐥𝐮̛𝐨̛̣𝐭 𝐜𝐮̉𝐚 𝐧𝐠𝐮̛𝐨̛̀𝐢 𝐤𝐡𝐚́𝐜", e.threadID, e.messageID)

var thuthach = ["𝑺𝒂́𝒏𝒈","𝑻𝒓𝒖̛𝒂","𝑪𝒉𝒊𝒆̂̀𝒖","𝑻𝒐̂́𝒊","Đ𝒆̂𝒎"]

	 var thuthach = thuthach[Math.floor(Math.random() * thuthach.length)]; 

var suthat = ["𝑺𝒂́𝒏𝒈","𝑻𝒓𝒖̛𝒂","𝑪𝒉𝒊𝒆̂̀𝒖","𝑻𝒐̂́𝒊","Đ𝒆̂𝒎"]

	 var suthat = suthat[Math.floor(Math.random() * suthat.length)]; 

  var msg = "";
    switch(handleReply.type) {
        case "choosee": {
           
            switch(e.body) {
                case "1": msg = `💷𝐂𝐡𝐮́𝐜 𝐦𝐮̛̀𝐧𝐠 ${thuthach}` ;
                case "2": msg = `💷𝐂𝐡𝐮́𝐜 𝐦𝐮̛̀𝐧𝐠 ${suthat}` ;
            };
            const choose = parseInt(e.body);
            if (isNaN(e.body)) 
            return api.sendMessage("🌸 𝑽𝒖𝒊 𝒍𝒐̀𝒏𝒈 𝒄𝒉𝒐̣𝒏 𝒔𝒖̛̣ 𝒕𝒉𝒂̣̂𝒕 𝒉𝒐𝒂̣̆𝒄 𝒕𝒉𝒖̛̉ 𝒕𝒉𝒂́𝒄𝒉!! 💖", e.threadID, e.messageID);
            if (choose > 2 || choose < 1) 
            return api.sendMessage("🌸 𝐋𝐮̛̣𝐚 𝐜𝐡𝐨̣𝐧 𝐤𝐡𝐨̂𝐧𝐠 𝐧𝐚̆̀𝐦 𝐭𝐫𝐨𝐧𝐠 𝐝𝐚𝐧𝐡 𝐬𝐚́𝐜𝐡🎀.", e.threadID, e.messageID); 
            api.unsendMessage(handleReply.messageID);
            if (msg == "🎋Chưa update...") {
                msg = "🎋Update soon...";
            };
            return api.sendMessage(`${msg}`, threadID, async () => {
            data.work2Time = Date.now();
            await Currencies.setData(senderID, { data });
            
        });

    };
}
}


module.exports.run = async ({  
    event:e, 
    api, 
    handleReply, 
    Currencies }) => {
    const { threadID, messageID, senderID } = e;
    const cooldown = global.configModule[this.config.name].cooldownTime;
    let data = (await Currencies.getData(senderID)).data || {};
    var   t = Date.parse("February 1, 2023") - Date.parse(new Date()),
    d = Math.floor( t/(1000*60*60*24) ),
    h = Math.floor( (t/(1000*60*60)) % 24 ),
    m = Math.floor( (t/1000/60) % 60 );

    if (typeof data !== "undefined" && cooldown - (Date.now() - data.work2Time) > 0) {

        var time = cooldown - (Date.now() - data.work2Time),
            hours = Math.floor((time / (60000 * 60000 ))/24),
            minutes = Math.floor(time / 60000),
            seconds = ((time % 60000) / 1000).toFixed(0); 
        return api.sendMessage(`💎𝐁𝐚̣𝐧 đ𝐚̃ 𝐧𝐡𝐚̣̂𝐧 𝐛𝐨̂́𝐜 𝐭𝐡𝐚̆𝐦 𝐫𝐨̂̀𝐢, 𝐯𝐮𝐢 𝐥𝐨̀𝐧𝐠 𝐪𝐮𝐚𝐲 𝐥𝐚̣𝐢 𝐯𝐚̀𝐨 𝐧𝐠𝐚̀𝐲 𝐦𝐚𝐢💴.\n🌸 𝐓𝐞̂́𝐭 𝐚̂𝐦 𝐥𝐢̣𝐜𝐡 𝐜𝐨̀𝐧 » ${d} 𝐧𝐠𝐚̀𝐲 ${h} 𝐠𝐢𝐨̛̀ ${m} 𝐩𝐡𝐮́𝐭`, e.threadID, e.messageID); // Đoạn này ae có thể để quay lại sau ${housr}giờ ${minutes}phút ${seconds}giây
    }
    else {    
        var msg = {
            body: "❤️─── 💞 ───❤️" +
                "\nㅤㅤ🌸 𝑺𝒖̛̣ 𝑻𝒉𝒂̣̂𝒕 🌸" +
                "\nㅤㅤㅤㅤㅤ𝒉𝒂𝒚" +
                "\nㅤㅤ🌸 𝑻𝒉𝒖̛̉ 𝑻𝒉𝒂́𝒄𝒉 🌸" + 
                "\n\n𝟏. 𝑺𝒖̛̣ 𝒕𝒉𝒂̣̂𝒕" +
                "\n𝟐. 𝑻𝒉𝒖̛̉ 𝒕𝒉𝒂́𝒄𝒉" +
                "\n\n🌸 𝑹𝒆𝒑𝒍𝒚 𝒕𝒊𝒏 𝒏𝒉𝒂̆́𝒏 𝒅𝒆̂̉ 𝒄𝒉𝒐̣𝒏 𝒔𝒖̛̣ 𝒕𝒉𝒂̣̂𝒕 𝒉𝒐𝒂̣̆𝒄 𝒕𝒉𝒖̛̉ 𝒕𝒉𝒂́𝒄𝒉 𝒏𝒉𝒂....!!❤" +
                "\n\n🎀═══♡♡═══🎀"}

                return api.sendMessage(msg,e.threadID,  (error, info) => {
                data.work2Time = Date.now();
        global.client.handleReply.push({
            type: "choosee",
            name: this.config.name,
            author: e.senderID,
            messageID: info.messageID
          })  
        })
    }
}

